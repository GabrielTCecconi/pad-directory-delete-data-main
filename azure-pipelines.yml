# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: SelfHosted

stages:
- stage: build
  displayName: 'Build stage'
  jobs:
    - job: build
      container: 
        image: node:20.19
        options: --user 0
      steps:
      - bash: node -v && npm -v
      - bash: |
          if [ -f src/handlers/package-lock.json ]; then
            npm ci --prefix src/handlers
          else
            npm i --prefix src/handlers
          fi
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'src/handlers'
          artifact: 'app'
          publishLocation: 'pipeline'

- stage: scan
  displayName: 'Snyk Scan stage'
  dependsOn: build
  condition: succeeded()
  variables:
    - group: snyk-vars
  jobs:
    - job: snyk_scan_job
      container: 
        image: node:20.19
        options: --user 0
      steps:
      - task: DownloadPipelineArtifact@2
        inputs: { artifact: app, path: src/handlers }
      - bash: |
          ls -la
          pwd
      - bash: cd src/handlers
      - bash: npm i -D snyk
      - bash: npx snyk auth $(SNYK_TOKEN)
      - bash: |
          npx snyk test --project-name="pad-delete-gitlabci" --org="$(SNYK_ORG)"
          npx snyk monitor --project-name="pad-delete-gitlabci" --org="$(SNYK_ORG)"

- stage: deploy
  displayName: 'Deploy SAM stage'
  dependsOn: [scan, build]
  condition: succeeded()
  variables:
    - group: aws-sam-homolog
  jobs:
    - job: sam_deploy
      steps:
      - bash: |
          curl -L -o aws-sam-cli.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
          unzip -q aws-sam-cli.zip -d sam-installation
          sudo ./sam-installation/install
          sam --version
        displayName: 'Install SAM CLI'
      - task: AWSShellScript@1
        inputs:
          awsCredentials: 'aws-connection'
          regionName: 'us-east-1'
          scriptType: 'inline'
          inlineScript: 'sam --version'
#       - bash: |
#           sam deploy \
#             --parameter-overrides customLambdaRole=$(LAMBDA_ROLE) \
#             --no-confirm-changeset \
#             --on-failure DELETE --no-fail-on-empty-changeset \
#             --s3-bucket $(BUCKET_NAME) \
#             --capabilities CAPABILITY_IAM \
#             --region $(AWS_REGION) \
#             --stack-name $(STACK_NAME)


