pipeline:
  name: sam-pipeline
  identifier: sampipeline
  projectIdentifier: samproject
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: build-setup
        identifier: buildsetup
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Run Node setup
                  identifier: Run_Node_setup
                  spec:
                    connectorRef: account.harnessImage
                    image: node:20
                    shell: Bash
                    command: |-
                      node -v
                      npm --version

                      if [ -f src/handlers/package-lock.json ]; then
                        npm ci --prefix src/handlers
                      else
                        npm i --prefix src/handlers
                      fi
              - step:
                  type: Run
                  name: Snyk scan
                  identifier: Snyk_scan
                  spec:
                    connectorRef: account.harnessImage
                    image: node:20
                    shell: Sh
                    command: |-
                      cd src/handlers
                      npx snyk auth "$SNYK_TOKEN"
                      npx snyk test --severity-threshold=high --all-projects --org=399c58fd-c05d-490c-86e3-b73b7a8d046d
                      # npx snyk code test --severity-threshold=high
                      npx snyk monitor --all-projects --org=399c58fd-c05d-490c-86e3-b73b7a8d046d
                    envVariables:
                      SNYK_TOKEN: <+secrets.getValue("SNYK_TOKEN")>
    - stage:
        name: Aprovar-Deploy
        identifier: AprovarDeploy
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Aprovar Deploy SAM
                  identifier: Aprovar_Deploy_SAM
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    isAutoRejectEnabled: false
                    approverInputs: []
        tags: {}
    - stage:
        name: Sam-Deploy
        identifier: SamDeploy
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Build and Deploy SAM
                  identifier: Build_and_Deploy_SAM
                  spec:
                    connectorRef: account.harnessImage
                    image: public.ecr.aws/sam/build-nodejs20.x
                    shell: Sh
                    command: |-
                      sam build
                      sam deploy \
                        --parameter-overrides \
                        customLambdaRole=${LAMBDA_ROLE} \
                        --no-confirm-changeset \
                        --on-failure DELETE --no-fail-on-empty-changeset \
                        --s3-bucket ${BUCKET_NAME} \
                        --capabilities CAPABILITY_IAM \
                        --region ${AWS_REGION} \
                        --stack-name ${STACK_NAME}
                    envVariables:
                      AWS_ACCESS_KEY_ID: <+secrets.getValue("AWS_access_key_ID")>
                      AWS_SECRET_ACCESS_KEY: <+secrets.getValue("AWS_secret_access_key")>
                      AWS_SESSION_TOKEN: <+secrets.getValue("AWS_session_token")>
                      LAMBDA_ROLE: arn:aws:iam::725510651649:role/lambda-default-ci
                      BUCKET_NAME: bucket-sam-teste
                      STACK_NAME: pad-directory-delete-data-main
                      ENV_VAR: hml
                      AWS_REGION: us-east-1
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: pad-directory-delete-data-main
        build: <+input>
