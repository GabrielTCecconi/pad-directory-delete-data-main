version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.1  # orb oficial da AWS CLI
  aws-sam: circleci/aws-sam-serverless@6.1.0  # orb oficial do SAM

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/guides/orchestrate/workflows/ & https://circleci.com/docs/reference/configuration-reference/#workflows
workflows:
  pad-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build_node
      - sam_deploy:
          requires:
            - build_node
          context:
            - aws-credentials # contexto com AWS_* credenciais
            - aws-infra # contexto com variáveis de infraestrutura

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/guides/orchestrate/jobs-steps/#jobs-overview & https://circleci.com/docs/reference/configuration-reference/#jobs
jobs:
  build_node:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/node:20.19
    # Add steps to the job
    # See: https://circleci.com/docs/guides/orchestrate/jobs-steps/#steps-overview & https://circleci.com/docs/reference/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run: echo "$teste"
      - run: node -v
      - run: npm --version
      - run:
          name: Instalar dependências
          command: |
            if [ -f src/handlers/package-lock.json ]; then
              npm ci --prefix src/handlers
            else
              npm i --prefix src/handlers
            fi
      - persist_to_workspace:
          root: .
          paths:
            - .
  sam_deploy:
    docker:
      - image: cimg/node:20.19
    steps:
      - attach_workspace:
          at: .
      - run: cp infra/samconfig.toml ./samconfig.toml
      - aws-cli/setup
      - run: aws sts get-caller-identity
      - run: aws s3 ls s3://bucket-sam-teste --profile default
      - aws-sam/install
      - aws-sam/build:
          validate: false
          use_container: false
          template: template.yaml
          debug: true
          region: us-east-1
      - aws-sam/deploy:
          region: us-east-1
          capabilities: "CAPABILITY_IAM"
          s3_bucket: bucket-sam-teste
          stack_name: $stack_name
          debug: true
          parameter_overrides: |
            customLambdaRole=$lambda_role_arn
          arguments: "--no-confirm-changeset --on-failure DELETE"
          


    