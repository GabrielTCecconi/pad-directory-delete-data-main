version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.1
  sam: circleci/aws-sam-serverless@6.1.0
  snyk: snyk/snyk@2.3.0

workflows:
  pad-workflow:
    jobs:
      - build_node
      - snyk_scan_job:
          requires:
            - build_node
          context:
            - snyk-setup
      - sam_deploy:
          AWS_REGION: us-east-1  # Parâmetro de região
          STACK_NAME: pad-directory-delete-data # Parâmetro de nome da stack
          ENV_VAR: hml        # Parâmetro de ambiente
          requires:
            - build_node
            - snyk_scan
          context:
            - aws-credentials
            - aws-infra


# parameters:                                  # ALTERAÇÃO: parâmetros para nomes de stack
#   stack_name_dev:
#     type: string
#     default: pad-app-dev
#   stack_name_hml:
#     type: string
#     default: pad-app-hml
#   stack_name_prd:
#     type: string
#     default: pad-app-prd



jobs:
  build_node:
    docker:
      - image: cimg/node:20.19
    steps:
      - checkout
      - run: node -v
      - run: npm --version
      - run:
          name: Instalar dependências
          command: |
            if [ -f src/handlers/package-lock.json ]; then
              npm ci --prefix src/handlers
            else
              npm i --prefix src/handlers
            fi
      - persist_to_workspace:
          root: .
          paths:
            - .

  snyk_scan_job:
    docker:
      - image: cimg/node:20.19
    working_directory: ~/project/src/handlers
    steps:
      - attach_workspace:
          at: ~/project
      - snyk/install
      - snyk/scan:
          project: pad-delete-circleci

  sam_deploy:
    parameters:
        AWS_REGION:
          type: string
          default: us-east-1
        STACK_NAME:
          type: string
          default: pad-directory-delete-data
        ENV_VAR:
          type: string
          default: dev
    docker:
      - image: cimg/base:2025.09
    steps:
      - checkout
      - run: cp infra/samconfig.toml ./samconfig.toml
      - aws-cli/setup
      - run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID" --profile default
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY" --profile default
          [ -n "$AWS_SESSION_TOKEN" ] && aws configure set aws_session_token "$AWS_SESSION_TOKEN" --profile default
          aws configure set region "${AWS_REGION:-us-east-1}" --profile default
      - run:
          name: Teste Permissões AWS
          command: |
           aws sts get-caller-identity --profile default
           aws s3 ls s3://bucket-sam-teste --profile default
      - aws-sam/install
      - aws-sam/build:
          validate: false
          use_container: true
          template: template.yaml
          debug: true
          region: us-east-1
      - aws-sam/deploy:
          region: us-east-1
          capabilities: "CAPABILITY_IAM"
          s3_bucket: bucket-sam-teste
          stack_name: $stack_name
          debug: true
          parameter_overrides: |
            customLambdaRole=$lambda_role_arn
          arguments: "--no-confirm-changeset --on-failure DELETE"
          
